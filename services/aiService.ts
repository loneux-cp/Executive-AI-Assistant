import { Task, CalendarEvent, Email, Document } from '@/types';

interface AIContext {
  currentTasks: Task[];
  upcomingEvents: CalendarEvent[];
  unreadEmails: Email[];
  recentDocuments: Document[];
}

export class AIService {
  private static mockResponses = {
    greeting: [
      '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π AI-–ø–æ–º–æ—â–Ω–∏–∫. –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –∑–∞–¥–∞—á–∞–º–∏, –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏.',
      '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –≥–æ—Ç–æ–≤ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏.',
      '–ü—Ä–∏–≤–µ—Ç! –í–∏–∂—É —É –≤–∞—Å {taskCount} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á –∏ {eventCount} —Å–æ–±—ã—Ç–∏–π —Å–µ–≥–æ–¥–Ω—è. –ß–µ–º –ø–æ–º–æ—á—å?'
    ],
    taskAnalysis: [
      '–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à–∏ –∑–∞–¥–∞—á–∏... –£ –≤–∞—Å {highPriorityCount} –≤—ã—Å–æ–∫–æ–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á. –†–µ–∫–æ–º–µ–Ω–¥—É—é –Ω–∞—á–∞—Ç—å —Å "{firstTask}".',
      '–û–±—Ä–∞—Ç–∏–ª –≤–Ω–∏–º–∞–Ω–∏–µ: —É –≤–∞—Å {overdueCount} –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á. –°—Ç–æ–∏—Ç –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã.',
      '–•–æ—Ä–æ—à–∞—è –Ω–æ–≤–æ—Å—Ç—å: –≤—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ {completedToday} –∑–∞–¥–∞—á —Å–µ–≥–æ–¥–Ω—è! –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–π –¥–µ–Ω—å!'
    ],
    scheduleOptimization: [
      '–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ... –í–∏–∂—É —Å–≤–æ–±–æ–¥–Ω–æ–µ –æ–∫–Ω–æ {timeSlot}. –ú–æ–∂–Ω–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å "{suggestedTask}".',
      '–í–Ω–∏–º–∞–Ω–∏–µ: —É –≤–∞—Å –ø–ª–æ—Ç–Ω—ã–π –¥–µ–Ω—å —Å {eventCount} –≤—Å—Ç—Ä–µ—á–∞–º–∏. –†–µ–∫–æ–º–µ–Ω–¥—É—é –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –º–µ–Ω–µ–µ –≤–∞–∂–Ω—ã–µ –¥–µ–ª–∞.',
      '–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Ñ–æ–∫—É—Å–Ω–æ–π —Ä–∞–±–æ—Ç—ã: {focusTime}. –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á—É "{taskName}"?'
    ],
    emailAssistance: [
      '–ü–æ–º–æ–≥—É —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ. –ö–∞–∫–æ–π —Ç–æ–Ω –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ: –¥–µ–ª–æ–≤–æ–π, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏–ª–∏ —Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π?',
      '–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–ø–∏—Å–∫–∏... –ü—Ä–µ–¥–ª–∞–≥–∞—é –Ω–∞—á–∞—Ç—å —Å: "{suggestedStart}"',
      '–£ –≤–∞—Å {unreadCount} –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø–∏—Å–µ–º. –°–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ –æ—Ç {importantSender}.'
    ],
    documentInsights: [
      '–î–æ–∫—É–º–µ–Ω—Ç "{docName}" —Å–æ–¥–µ—Ä–∂–∏—Ç {keyPoints} –∫–ª—é—á–µ–≤—ã—Ö –ø—É–Ω–∫—Ç–æ–≤. –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è?',
      '–û–±–Ω–∞—Ä—É–∂–∏–ª –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ –≤–∞–∂–Ω—ã–µ –¥–∞—Ç—ã: {dates}. –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å?',
      '–†–µ–∑—é–º–µ –≥–æ—Ç–æ–≤–æ: {summary}. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–∑–∏—Å—ã –∫–∞–∫ –∑–∞–º–µ—Ç–∫–∏?'
    ]
  };

  static async processCommand(command: string, context?: AIContext): Promise<string> {
    const lowercaseCommand = command.toLowerCase();
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    await new Promise(resolve => setTimeout(resolve, 1200));

    // –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑
    if (context) {
      if (this.isScheduleQuery(lowercaseCommand)) {
        return this.generateScheduleAdvice(context);
      }
      
      if (this.isProductivityQuery(lowercaseCommand)) {
        return this.generateProductivityInsights(context);
      }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–æ–º–∞–Ω–¥
    if (this.isGreeting(lowercaseCommand)) {
      return this.getContextualResponse('greeting', context);
    }

    if (this.isTaskCommand(lowercaseCommand)) {
      return this.processTaskCommand(command, context);
    }

    if (this.isCalendarCommand(lowercaseCommand)) {
      return this.processCalendarCommand(command, context);
    }

    if (this.isEmailCommand(lowercaseCommand)) {
      return this.processEmailCommand(command, context);
    }

    if (this.isDocumentCommand(lowercaseCommand)) {
      return this.processDocumentCommand(command, context);
    }

    // –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    return this.generateSmartResponse(command, context);
  }

  private static isScheduleQuery(command: string): boolean {
    const scheduleKeywords = ['—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '–ø–ª–∞–Ω', '—Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è', '–∫–æ–≥–¥–∞', 'schedule'];
    return scheduleKeywords.some(keyword => command.includes(keyword));
  }

  private static isProductivityQuery(command: string): boolean {
    const productivityKeywords = ['–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', '—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', '–ø—Ä–æ–≥—Ä–µ—Å—Å'];
    return productivityKeywords.some(keyword => command.includes(keyword));
  }

  private static isGreeting(command: string): boolean {
    const greetings = ['–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å', 'hello', 'hi', '–ø–æ–º–æ—â—å'];
    return greetings.some(greeting => command.includes(greeting));
  }

  private static isTaskCommand(command: string): boolean {
    const taskKeywords = ['—Å–æ–∑–¥–∞–π –∑–∞–¥–∞—á—É', '–¥–æ–±–∞–≤—å –∑–∞–¥–∞—á—É', '–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞', 'task', '–∑–∞–¥–∞–Ω–∏–µ', '–¥–µ–ª–æ'];
    return taskKeywords.some(keyword => command.includes(keyword));
  }

  private static isCalendarCommand(command: string): boolean {
    const calendarKeywords = ['—Å–æ–∑–¥–∞–π –≤—Å—Ç—Ä–µ—á—É', '–¥–æ–±–∞–≤—å —Å–æ–±—ã—Ç–∏–µ', '–∑–∞–ø–ª–∞–Ω–∏—Ä—É–π', '–∫–∞–ª–µ–Ω–¥–∞—Ä—å', '–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ', '–≤—Å—Ç—Ä–µ—á–∞'];
    return calendarKeywords.some(keyword => command.includes(keyword));
  }

  private static isEmailCommand(command: string): boolean {
    const emailKeywords = ['–Ω–∞–ø–∏—à–∏ –ø–∏—Å—å–º–æ', 'email', '–ø–æ—á—Ç–∞', '–æ—Ç–≤–µ—Ç', '—á–µ—Ä–Ω–æ–≤–∏–∫'];
    return emailKeywords.some(keyword => command.includes(keyword));
  }

  private static isDocumentCommand(command: string): boolean {
    const docKeywords = ['–∞–Ω–∞–ª–∏–∑', '—Ä–µ–∑—é–º–µ', '–¥–æ–∫—É–º–µ–Ω—Ç', '–ø—Ä–æ—á–∏—Ç–∞–π', 'summarize', '—Ñ–∞–π–ª'];
    return docKeywords.some(keyword => command.includes(keyword));
  }

  private static getContextualResponse(type: keyof typeof AIService.mockResponses, context?: AIContext): string {
    const responses = this.mockResponses[type];
    let response = responses[Math.floor(Math.random() * responses.length)];
    
    if (context) {
      const activeTasks = context.currentTasks.filter(t => !t.completed);
      const todayEvents = context.upcomingEvents.filter(e => {
        const today = new Date();
        return e.startDate.toDateString() === today.toDateString();
      });
      
      response = response.replace('{taskCount}', activeTasks.length.toString());
      response = response.replace('{eventCount}', todayEvents.length.toString());
    }
    
    return response;
  }

  private static generateScheduleAdvice(context: AIContext): string {
    const activeTasks = context.currentTasks.filter(t => !t.completed);
    const todayEvents = context.upcomingEvents.filter(e => {
      const today = new Date();
      return e.startDate.toDateString() === today.toDateString();
    });

    if (todayEvents.length > 5) {
      return `‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: —É –≤–∞—Å –æ—á–µ–Ω—å –ø–ª–æ—Ç–Ω—ã–π –¥–µ–Ω—å —Å ${todayEvents.length} —Å–æ–±—ã—Ç–∏—è–º–∏. –†–µ–∫–æ–º–µ–Ω–¥—É—é:\n\n‚Ä¢ –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –º–µ–Ω–µ–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏\n‚Ä¢ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è –¥–ª—è –≤–∞–∂–Ω—ã—Ö –∑–∞–¥–∞—á\n‚Ä¢ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ—Ä—ã–≤—ã –º–µ–∂–¥—É –≤—Å—Ç—Ä–µ—á–∞–º–∏`;
    }

    if (activeTasks.length > 10) {
      const highPriorityTasks = activeTasks.filter(t => t.priority === 'high');
      return `üìã –£ –≤–∞—Å ${activeTasks.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á, –∏–∑ –Ω–∏—Ö ${highPriorityTasks.length} –≤—ã—Å–æ–∫–æ–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö.\n\n–†–µ–∫–æ–º–µ–Ω–¥—É—é —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –Ω–∞: "${highPriorityTasks[0]?.title || activeTasks[0]?.title}"`;
    }

    return `‚úÖ –í–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–æ! ${todayEvents.length} —Å–æ–±—ã—Ç–∏–π —Å–µ–≥–æ–¥–Ω—è, ${activeTasks.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á. –û—Ç–ª–∏—á–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å!`;
  }

  private static generateProductivityInsights(context: AIContext): string {
    const completedTasks = context.currentTasks.filter(t => t.completed);
    const overdueTasks = context.currentTasks.filter(t => 
      t.dueDate && new Date() > t.dueDate && !t.completed
    );

    return `üìä –í–∞—à–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:\n\n‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞—á: ${completedTasks.length}\n‚è∞ –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ: ${overdueTasks.length}\nüìß –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø–∏—Å–µ–º: ${context.unreadEmails.length}\nüìÑ –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ: ${context.recentDocuments.length}\n\n${overdueTasks.length > 0 ? 'üí° –†–µ–∫–æ–º–µ–Ω–¥—É—é –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–¥–ª–∞–π–Ω—ã –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.' : 'üéâ –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –í—Å–µ –≤ —Å—Ä–æ–∫!'}`;
  }

  private static processTaskCommand(command: string, context?: AIContext): string {
    // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∏–∑ –∫–æ–º–∞–Ω–¥—ã
    const taskMatch = command.match(/—Å–æ–∑–¥–∞–π –∑–∞–¥–∞—á—É[:\s]+["']?([^"']+)["']?/i) || 
                     command.match(/–¥–æ–±–∞–≤—å –∑–∞–¥–∞—á—É[:\s]+["']?([^"']+)["']?/i);
    
    if (taskMatch) {
      const taskTitle = taskMatch[1].trim();
      return `‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞: "${taskTitle}"\n\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–µ–¥–ª–∞–π–Ω\n‚Ä¢ –í—ã–±—Ä–∞—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç\n‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è`;
    }

    return `üìù –ì–æ—Ç–æ–≤ —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É! –ù–∞–∑–æ–≤–∏—Ç–µ, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å, –∏ —è –ø–æ–º–æ–≥—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ –µ—ë —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å —Å —É—á–µ—Ç–æ–º –≤–∞—à–µ–≥–æ —Ç–µ–∫—É—â–µ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.`;
  }

  private static processCalendarCommand(command: string, context?: AIContext): string {
    const eventMatch = command.match(/—Å–æ–∑–¥–∞–π –≤—Å—Ç—Ä–µ—á—É[:\s]+["']?([^"']+)["']?/i) ||
                      command.match(/–∑–∞–ø–ª–∞–Ω–∏—Ä—É–π[:\s]+["']?([^"']+)["']?/i);
    
    if (eventMatch) {
      const eventTitle = eventMatch[1].trim();
      return `üìÖ –ü–ª–∞–Ω–∏—Ä—É—é —Å–æ–±—ã—Ç–∏–µ: "${eventTitle}"\n\nüéØ –ü—Ä–µ–¥–ª–∞–≥–∞—é –≤—Ä–µ–º—è:\n‚Ä¢ –ó–∞–≤—Ç—Ä–∞ 14:00-15:00\n‚Ä¢ –ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞ 10:00-11:00\n\nüí° –£—á—Ç—É –≤–∞—à–µ —Ç–µ–∫—É—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.`;
    }

    return `üìÖ –ü–æ–º–æ–≥—É –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Å—Ç—Ä–µ—á—É! –£—á—Ç—É –≤–∞—à–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–æ–±—ã—Ç–∏—è –∏ –ø—Ä–µ–¥–ª–æ–∂—É –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è.`;
  }

  private static processEmailCommand(command: string, context?: AIContext): string {
    if (command.includes('–Ω–∞–ø–∏—à–∏ –ø–∏—Å—å–º–æ') || command.includes('—á–µ—Ä–Ω–æ–≤–∏–∫')) {
      return `üìß –ü–æ–º–æ–≥—É —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ!\n\nüìù –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å:\n‚Ä¢ –î–µ–ª–æ–≤–æ–π (—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π)\n‚Ä¢ –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π (–Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π)\n‚Ä¢ –ö—Ä–∞—Ç–∫–∏–π (—Ç–æ–ª—å–∫–æ —Ñ–∞–∫—Ç—ã)\n\nüí° –£–∫–∞–∂–∏—Ç–µ —Ç–µ–º—É –∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—É–Ω–∫—Ç—ã, —è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É—é —Ç–µ–∫—Å—Ç.`;
    }

    if (context && context.unreadEmails.length > 0) {
      return `üì¨ –£ –≤–∞—Å ${context.unreadEmails.length} –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø–∏—Å–µ–º.\n\nüî• –°–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ:\n${context.unreadEmails.slice(0, 2).map(e => `‚Ä¢ –û—Ç ${e.from}: ${e.subject}`).join('\n')}\n\n–ü–æ–º–æ—á—å —Å –æ—Ç–≤–µ—Ç–∞–º–∏?`;
    }

    return `üìß –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–æ–π: —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç –∏–ª–∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.`;
  }

  private static processDocumentCommand(command: string, context?: AIContext): string {
    if (command.includes('–∞–Ω–∞–ª–∏–∑') || command.includes('—Ä–µ–∑—é–º–µ')) {
      return `üìÑ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –¥–æ–∫—É–º–µ–Ω—Ç—ã...\n\nüîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã:\n‚Ä¢ –ö–ª—é—á–µ–≤—ã–µ –¥–∞—Ç—ã –∏ –¥–µ–¥–ª–∞–π–Ω—ã\n‚Ä¢ –î–µ–π—Å—Ç–≤–∏—è –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é\n‚Ä¢ –í–∞–∂–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã\n\nüí° –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è?`;
    }

    return `üìÑ –ì–æ—Ç–æ–≤ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã! –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª, –∏ —è:\n\n‚Ä¢ –°–æ–∑–¥–∞–º –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ\n‚Ä¢ –í—ã–¥–µ–ª—é –∫–ª—é—á–µ–≤—ã–µ –ø—É–Ω–∫—Ç—ã\n‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂—É –¥–µ–π—Å—Ç–≤–∏—è\n‚Ä¢ –ù–∞–π–¥—É –≤–∞–∂–Ω—ã–µ –¥–∞—Ç—ã`;
  }

  private static generateSmartResponse(command: string, context?: AIContext): string {
    const responses = [
      `ü§î –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å! –ü–æ–∑–≤–æ–ª—å—Ç–µ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–∞–∏–ª—É—á—à–∏–π –ø–æ–¥—Ö–æ–¥ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è.`,
      `üí° –ü–æ–Ω—è–ª –≤–∞—à—É –∑–∞–¥–∞—á—É. –†–µ–∫–æ–º–µ–Ω–¥—É—é —Ä–∞–∑–±–∏—Ç—å –µ—ë –Ω–∞ —ç—Ç–∞–ø—ã –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.`,
      `üéØ –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å! –í MVP –≤–µ—Ä—Å–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã: —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏, –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á, –∞–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ email-–ø–æ–º–æ—â—å.`
    ];

    return responses[Math.floor(Math.random() * responses.length)];
  }

  static async analyzeDocument(document: Document): Promise<string> {
    await new Promise(resolve => setTimeout(resolve, 2500));
    
    const insights = [
      `üìã –î–æ–∫—É–º–µ–Ω—Ç "${document.name}" –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:\n\nüîç –°—Ç—Ä—É–∫—Ç—É—Ä–∞:\n‚Ä¢ ${Math.floor(Math.random() * 5) + 3} –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤\n‚Ä¢ ${Math.floor(Math.random() * 10) + 5} –∫–ª—é—á–µ–≤—ã—Ö –ø—É–Ω–∫—Ç–æ–≤\n‚Ä¢ ${Math.floor(Math.random() * 3) + 1} –≤–∞–∂–Ω—ã—Ö –¥–∞—Ç`,
      
      `üìä –ê–Ω–∞–ª–∏–∑ "${document.name}" –∑–∞–≤–µ—Ä—à–µ–Ω:\n\nüíº –¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${document.type === 'pdf' ? '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç' : '–¢–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª'}\nüìà –°–ª–æ–∂–Ω–æ—Å—Ç—å: –°—Ä–µ–¥–Ω—è—è\n‚ö° –í—Ä–µ–º—è —á—Ç–µ–Ω–∏—è: ${Math.floor(document.size / 1000) + 2} –º–∏–Ω`,
      
      `üéØ –û–±—Ä–∞–±–æ—Ç–∫–∞ "${document.name}":\n\n‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–æ –∫–ª—é—á–µ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö\nüìÖ –ù–∞–π–¥–µ–Ω—ã –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏\nüìã –í—ã–¥–µ–ª–µ–Ω—ã –∑–∞–¥–∞—á–∏ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é\nüîó –û–ø—Ä–µ–¥–µ–ª–µ–Ω—ã —Å–≤—è–∑–∏ —Å –¥—Ä—É–≥–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏`
    ];

    const baseInsight = insights[Math.floor(Math.random() * insights.length)];
    
    return `${baseInsight}\n\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n‚Ä¢ –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è\n‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á–µ–≤—ã–µ –¥–∞—Ç—ã –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å\n‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–∞–∂–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã\n‚Ä¢ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ –¥–µ–¥–ª–∞–π–Ω–∞–º`;
  }

  static async generateEmailDraft(context: string, tone: 'formal' | 'friendly' | 'brief' = 'formal'): Promise<string> {
    await new Promise(resolve => setTimeout(resolve, 1800));

    const templates = {
      formal: {
        greeting: '–£–≤–∞–∂–∞–µ–º—ã–π(-–∞—è)',
        body: '–û–±—Ä–∞—â–∞—é—Å—å –∫ –í–∞–º –ø–æ –≤–æ–ø—Ä–æ—Å—É',
        closing: '–° —É–≤–∞–∂–µ–Ω–∏–µ–º'
      },
      friendly: {
        greeting: '–ü—Ä–∏–≤–µ—Ç',
        body: '–•–æ—Ç–µ–ª(–∞) –æ–±—Å—É–¥–∏—Ç—å —Å —Ç–æ–±–æ–π',
        closing: '–î–æ –≤—Å—Ç—Ä–µ—á–∏'
      },
      brief: {
        greeting: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ',
        body: '–ö—Ä–∞—Ç–∫–æ –ø–æ —Ç–µ–º–µ:',
        closing: '–°–ø–∞—Å–∏–±–æ'
      }
    };

    const template = templates[tone];
    
    return `üìß –ß–µ—Ä–Ω–æ–≤–∏–∫ –ø–∏—Å—å–º–∞ (${tone === 'formal' ? '–¥–µ–ª–æ–≤–æ–π' : tone === 'friendly' ? '–¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π' : '–∫—Ä–∞—Ç–∫–∏–π'} —Å—Ç–∏–ª—å):\n\n${template.greeting},\n\n${template.body} ${context}.\n\n[–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç –ø–∏—Å—å–º–∞]\n\n${template.closing},\n[–í–∞—à–µ –∏–º—è]\n\nüí° –°–æ–≤–µ—Ç: –î–æ–±–∞–≤—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –∏ –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é –¥–ª—è –±–æ–ª—å—à–µ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.`;
  }

  static async getScheduleOptimization(tasks: Task[], events: CalendarEvent[]): Promise<string> {
    await new Promise(resolve => setTimeout(resolve, 1500));

    const activeTasks = tasks.filter(t => !t.completed);
    const todayEvents = events.filter(e => {
      const today = new Date();
      return e.startDate.toDateString() === today.toDateString();
    });

    const highPriorityTasks = activeTasks.filter(t => t.priority === 'high');
    const overdueTasks = activeTasks.filter(t => 
      t.dueDate && new Date() > t.dueDate
    );

    let optimization = `üéØ –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:\n\n`;

    if (overdueTasks.length > 0) {
      optimization += `‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ù–û: ${overdueTasks.length} –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á\n`;
      optimization += `–ü–µ—Ä–≤–æ–æ—á–µ—Ä–µ–¥–Ω–æ: "${overdueTasks[0].title}"\n\n`;
    }

    if (todayEvents.length > 4) {
      optimization += `üìÖ –ü–ª–æ—Ç–Ω—ã–π –¥–µ–Ω—å: ${todayEvents.length} –≤—Å—Ç—Ä–µ—á\n–†–µ–∫–æ–º–µ–Ω–¥—É—é 15-–º–∏–Ω—É—Ç–Ω—ã–µ –ø–µ—Ä–µ—Ä—ã–≤—ã –º–µ–∂–¥—É —Å–æ–±—ã—Ç–∏—è–º–∏\n\n`;
    }

    if (highPriorityTasks.length > 0) {
      optimization += `üî• –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏ (${highPriorityTasks.length}):\n`;
      optimization += highPriorityTasks.slice(0, 3).map(t => `‚Ä¢ ${t.title}`).join('\n');
      optimization += `\n\n`;
    }

    optimization += `üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n`;
    optimization += `‚Ä¢ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å 2 —á–∞—Å–∞ –¥–ª—è –≥–ª—É–±–æ–∫–æ–π —Ä–∞–±–æ—Ç—ã\n`;
    optimization += `‚Ä¢ –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ö–æ–∂–∏–µ –∑–∞–¥–∞—á–∏\n`;
    optimization += `‚Ä¢ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞ email –∏ –∑–≤–æ–Ω–∫–∏\n`;
    optimization += `‚Ä¢ –û—Å—Ç–∞–≤–∏—Ç—å –±—É—Ñ–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã—Ö –¥–µ–ª`;

    return optimization;
  }
}